--- 
title: "Palmer Penguins"
author: "Cobblepot Analytics"
format: 
  dashboard:
    theme: morph
server: shiny
---

```{python}
#| context: setup
import seaborn as sns
from shiny import render, reactive, ui
penguins = sns.load_dataset("penguins")
```

# {.sidebar}

![](images/penguins.png){width="80%"}

```{python}
species = list(penguins["species"].value_counts().index)
ui.input_checkbox_group(
    "species", "Species:", 
    species, selected = species
)

islands = list(penguins["island"].value_counts().index)
ui.input_checkbox_group(
    "islands", "Islands:", 
    islands, selected = islands
)

@reactive.Calc
def filtered_penguins():
    data = penguins[penguins["species"].isin(input.species())]
    data = data[data["island"].isin(input.islands())]
    return data
```

```{python}
ui.input_select("dist", "Distribution:", choices=["kde", "hist"])
ui.input_checkbox("rug", "Show rug marks", value = False)
```

[Learn more](https://pypi.org/project/palmerpenguins/) about the 
Palmer Penguins dataset.

# Plots

## Row {.flow}

```{python}
#| component: valuebox
#| title: "Value add"
dict(
    value = 42
)
```

```{python}
import shiny.experimental as x
@render.ui
def more_value():
    value = 84 if input.rug() else 42
    return x.ui.value_box("More value", value)
```

## Row

```{python}
@render.plot
def depth():
    return sns.displot(
        filtered_penguins(), x = "bill_depth_mm", 
        hue = "species", kind = input.dist(), 
        fill = True, rug=input.rug()
    )
``` 

## Row

```{python}
@render.plot
def length():
    return sns.displot(
        filtered_penguins(), x = "bill_length_mm", 
        hue = "species", kind = input.dist(), 
        fill = True, rug=input.rug()
    )
``` 

# Data

```{python} 
@render.data_frame
def dataview():
    return render.DataGrid(filtered_penguins(), height="100%")
``` 

